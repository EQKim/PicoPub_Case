@page "/add-item"
@using Microsoft.AspNetCore.Components
@using Microsoft.AspNetCore.Components.Forms
@using UseCasePicoP.ClassLibrary
@using UseCasePicoP.Services.Interface
@using global::MongoDB.Bson
@inject IItemService ItemService
@inject NavigationManager Navigation

<h3>Add Item</h3>

<EditForm Model="NewItem" OnValidSubmit="HandleValidSubmit" class="form-container">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="form-group">
        <label for="name">Name:</label>
        <InputText id="name" @bind-Value="NewItem.Name" class="form-control" />
        <ValidationMessage For="@(() => NewItem.Name)" />
    </div>
    <div class="form-group">
        <label for="description">Description:</label>
        <InputText id="description" @bind-Value="NewItem.Description" class="form-control" />
    </div>
    <div class="form-group">
        <label for="price">Price:</label>
        <InputNumber id="price" @bind-Value="NewItem.Price" class="form-control" />
        <ValidationMessage For="@(() => NewItem.Price)" />
    </div>
    <div class="form-group">
        <label for="image">Image:</label>
        <InputFile OnChange="HandleImageUpload" class="form-control-file" />
    </div>

    @if (!string.IsNullOrEmpty(ErrorMessage))
    {
        <div class="alert alert-danger">@ErrorMessage</div>
    }

    <button type="submit" class="btn btn-primary">Add Item</button>
</EditForm>

@code {
    private Item NewItem { get; set; } = new Item();
    private string ErrorMessage { get; set; }

    private async Task HandleImageUpload(InputFileChangeEventArgs e)
    {
        var file = e.File;
        using var memoryStream = new MemoryStream();
        await file.OpenReadStream().CopyToAsync(memoryStream);
        NewItem.ImageData = memoryStream.ToArray();
        
        // Log the length of the image data
        Console.WriteLine($"Image data length: {NewItem.ImageData.Length}");
    }

    private async Task HandleValidSubmit()
    {
        // Check if ImageData is set
        if (NewItem.ImageData == null || NewItem.ImageData.Length == 0)
        {
            ErrorMessage = "Please upload an image.";
            return;
        }

        NewItem.Id = ObjectId.GenerateNewId().ToString(); // Ensure a new ID is generated
        await ItemService.CreateItemAsync(NewItem);
        Navigation.NavigateTo("/items");
    }
}
